name: 🚀 Despliegue de Angular on push

on:
  push:
    branches:
      - main # El flujo se ejecuta en cada push a la rama main

jobs:
  web-deploy:
    name: 🎉 Despliegue
    runs-on: ubuntu-latest # Utiliza la última versión de Ubuntu para la ejecución

    steps:
      # Paso 1: Obtener el código más reciente del repositorio
      - name: 🚚 Obtener el código más reciente
        uses: actions/checkout@v4

      # Paso 2: Configurar Node.js en la versión especificada
      - name: 🔧 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # Versión específica de Node.js

      # Paso 3: Instalar dependencias y construir el proyecto Angular
      - name: 🔧 Instalar dependencias y construir el proyecto
        run: |
          npm ci
          npx ng build --configuration=production

      # Paso 4: Crear el archivo .htaccess para configuraciones de Apache y PHP
      - name: 🛠️ Crear archivo .htaccess
        run: |
          cat <<EOF > ./dist/angular-19-app/browser/.htaccess
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /

            # Redirige todas las solicitudes a index.html, excepto las solicitudes de archivos existentes
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^.*$ index.html [L]
          </IfModule>

            # Configuración de PHP
          <IfModule mod_php.c>
            php_value post_max_size 300M
            php_value upload_max_filesize 300M
            php_value max_execution_time 300
            php_value memory_limit 128M
          </IfModule>

          <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css text/javascript application/javascript application/json
          </IfModule>
          EOF

      # Paso 5: Sincronizar los archivos generados con el servidor vía FTP
      - name: 📂 Sincronizar archivos por FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: intranet.imaarica.cl
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/angular-19-app/browser/
          server-dir: ./public_html/

      # Paso 6: Notificar despliegue exitoso
      - name: ✅ Notificar despliegue exitoso
        if: success()
        run: echo "El despliegue fue exitoso 🚀"

      # Paso 7: Notificar error en el despliegue
      - name: 🚨 Notificar error en el despliegue
        if: failure()
        run:
          echo "El despliegue ha fallado 😢"

          # 🔄 ¿Cómo activar las extensiones PHP?
          # Si tu servidor es administrado (como en un hosting compartido), las opciones son:
          #
          # 1. Contactar al proveedor: Solicita que activen las extensiones necesarias.
          #
          # 2. Usar php.ini: Si te permiten usar un archivo php.ini personalizado, puedes intentar agregar:
          #
          # extension=mbstring
          # extension=intl
          # extension=bcmath
          # extension=pdo
          # extension=pdo_mysql
          #
          # Nota: La habilitación de extensiones PHP depende del entorno del servidor.
